#!/usr/bin/env node
'use strict';var _clientnode=require('clientnode'),_clientnode2=_interopRequireDefault(_clientnode),_fs=require('fs'),fileSystem=_interopRequireWildcard(_fs),_loaderUtils=require('loader-utils'),loaderUtils=_interopRequireWildcard(_loaderUtils),_pug=require('pug'),pug=_interopRequireWildcard(_pug),_configurator=require('./configurator.compiled'),_configurator2=_interopRequireDefault(_configurator),_helper=require('./helper.compiled'),_helper2=_interopRequireDefault(_helper);function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b.default=a,b}function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}try{require('source-map-support/register')}catch(a){}module.exports=function(a){this.cacheable&&this.cacheable();const b=_clientnode2.default.convertSubstringInPlainObject(_clientnode2.default.extendObject(!0,{context:'./',extensions:{file:{external:['.js'],internal:['.js','.css','.svg','.png','.jpg','.gif','.ico','.html','.json','.eot','.ttf','.woff']},module:[]},module:{aliases:{},replacements:{}}},this.options.pug||{}),/#%%%#/g,'!'),c=(d,e=b.compiler)=>(f={})=>{e=_clientnode2.default.extendObject(!0,{filename:d,doctype:'html',compileDebug:this.debug||!1},e);let g;return e.isString?(delete e.isString,g=pug.compile(d,e)):g=pug.compileFile(d,e),g(_clientnode2.default.extendObject(!0,{configuration:_configurator2.default,require:(h)=>{const i=h.replace(/^(.+)\?[^?]+$/,'$1'),j=h.match(/^[^?]+\?(.+)$/,'$1');let k={};if(j){k=((o,p,q,r,s)=>new Function('request','template','source','compile','locals',`return ${j[1]}`)(o,p,q,r,s))(h,i,a,c,f)}const l=_clientnode2.default.extendObject(!0,{encoding:'utf-8'},k.options||{});if(l.isString)return c(i,l)(k);const m=_helper2.default.determineModuleFilePath(i,b.module.aliases,b.module.replacements,b.extensions,b.context,_configurator2.default.path.source.asset.base,_configurator2.default.path.ignore,_configurator2.default.module.directoryNames,_configurator2.default.package.main.fileNames,_configurator2.default.package.main.propertyNames,_configurator2.default.package.aliasPropertyNames);if(m)return this.addDependency(m),j||m.endsWith('.pug')?c(m,l)(k):fileSystem.readFileSync(m,l);throw new Error(`Given template file "${i}" couldn't be resolved.`)}},f))};return c(a,_clientnode2.default.extendObject(!0,{isString:!0,filename:loaderUtils.getRemainingRequest(this).replace(/^!/,'')},b.compiler||{}))(b.locals||{})};

//# sourceMappingURL=data:application/json;base64,