'use strict';Object.defineProperty(exports,'__esModule',{value:!0});const onCreatedListener=[];let browserAPI;if('undefined'==typeof TARGET_TECHNOLOGY||'node'===TARGET_TECHNOLOGY){const a=require('path'),b=require('jsdom'),c=b.createVirtualConsole().sendTo(console,{omitJsdomErrors:!0});c.on('jsdomError',function(e){!browserAPI.debug&&['XMLHttpRequest','resource loading'].includes(e.type)?console.warn(`Loading resource failed: ${e.toString()}.`):console.error(e.stack,e.detail)});const d=function render(e){return b.env({created:function created(f,g){if(browserAPI={debug:!1,domContentLoaded:!1,metaDOM:b,window:g,windowLoaded:!1},browserAPI.window.document.addEventListener('DOMContentLoaded',function(){browserAPI.domContentLoaded=!0}),f)throw f;else for(const h of onCreatedListener)h(browserAPI,!1)},features:{FetchExternalResources:['script','frame','iframe','link','img'],ProcessExternalResources:['script'],SkipExternalResources:!1},html:e,onload:function onload(){browserAPI.domContentLoaded=!0,browserAPI.windowLoaded=!0},resourceLoader:function resourceLoader(f,g){return'localhost'===f.url.hostname&&(f.url.host=f.url.hostname='',f.url.port=null,f.url.protocol='file:',f.url.href=f.url.href.replace(/^[a-zA-Z]+:\/\/localhost(?::[0-9]+)?/,`file://${process.cwd()}`),f.url.path=f.url.pathname=a.join(process.cwd(),f.url.path)),browserAPI.debug&&console.info(`Load resource "${f.url.href}".`),f.defaultFetch(function(h,...i){h||g(h,...i)})},url:'http://localhost',virtualConsole:c})};'undefined'==typeof NAME||'webOptimizer'===NAME?require('fs').readFile(a.join(__dirname,'index.html.ejs'),{encoding:'utf-8'},function(e,f){if(e)throw e;d(require('ejs').compile(f,{configuration:{name:'test',givenCommandLineArguments:[]}}))}):d(require('webOptimizerDefaultTemplateFilePath'))}else browserAPI={debug:!1,domContentLoaded:!1,metaDOM:null,window,windowLoaded:!1},window.document.addEventListener('DOMContentLoaded',function(){browserAPI.domContentLoaded=!0;for(const a of onCreatedListener)a(browserAPI,!1)}),window.addEventListener('load',function(){browserAPI.windowLoaded=!0});exports.default=function(a,b=!0){const c=function wrappedCallback(...d){return b&&'undefined'!=typeof global&&global!==browserAPI.window&&(global.window=browserAPI.window),a(...d)};return'undefined'==typeof TARGET_TECHNOLOGY||'node'===TARGET_TECHNOLOGY?browserAPI?c(browserAPI,!0):onCreatedListener.push(c):browserAPI.domContentLoaded?c(browserAPI,!0):onCreatedListener.push(c)};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,